name: Cache Node and NPM Dependencies

description: "This action allows to cache both Node and NPM dependencies based on the package-lock.json file"

inputs:
  node-version:
    required: true
    description: NodeJS version
    default: 20.x

  working-dir:
    required: false
    description: Working directory of the application
    default: .

  target-env:
    required: false
    description: dev or prod. Controlls whether dev dependencies are installed
    default: dev

outputs:
  installed-deps:
    description: Whether dependencies were installed or not
    value: ${{ steps.cache.outputs.cache-hit != 'true' }}

runs:
  using: composite
  steps:
    - name: Setup NodeJS version ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
    - name: Cache dependencies
      id: cache
      uses: actions/cache@v4
      with:
        path: ${{ inputs.working-dir }}
        key: your-key-prefix-${{ inputs.target-env }}-${{ hashFiles(format('{0}/{1}', inputs.working-dir, 'package-lock.json')) }}
    - name: Install dependencies
      if: ${{ steps.cache.outputs.cache-hit != 'true' }}
      working-directory: ${{ inputs.working-dir }}
      shell: bash
      env:
        run-command: ${{ inputs.target-env == 'dev' && 'npm ci' || 'npm ci --omit=dev' }}
      run: ${{ env.run-command }}
